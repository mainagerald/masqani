logging:
  level:
    ROOT: INFO
    org.hibernate.SQL: DEBUG
    com.masqani.masqani: DEBUG

spring:
  profiles:
    active: dev
  application:
    name: masqani
  datasource:
    url: jdbc:mysql://localhost:3306/masqani2?createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      poolName: Hikari
      auto-commit: false
    initialize: true
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none # because of liquibase!
      format_sql: true
      show-sql: true
    properties:
        hibernate:
          type:
            preferred_uuid_jdbc_type: CHAR #for uuid storage. might change to binary(16) later.
          default_schema: masqani2
  liquibase:
    contexts: dev
    change-log: db/changelog/db.changelog-master.xml
    default-schema: masqani2
    enabled: true
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: "http://localhost:9090/login/oauth2/code/google"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: mainageralddev@gmail.com
    password: ${MAIL_PASSWORD}
  devtools:
    restart:
      enabled: false


hazelcast:
  network:
    join:
      multicast:
        enabled: true
    public:
      address: 127.0.0.1
  local:
    publicAddress: 127.0.0.1

jwt:
  secret: ${JWT_SECRET}

# Swagger Configuration
springdoc:
  swagger-ui:
    path: /swagger-ui
    enabled: true


#s3 config
cloud:
  aws:
    credentials:
      access-key: ${AWS-ACCESS-KEY}
      secret-key: aws-secret
#      secret-key: ${AWS-SECRET-KEY} #same as name below
    region: eu-north-1
    s3:
      bucket:
        name: aws-s3
#        name: ${S3-BUCKET-FILE-STORAGE} #comment out to reduce calls and add cache for get requests
        url-prefix: ${S3-URL-PREFIX}

#TODO: SWITCH TO BACK-BLAZE S3 IF POSSIBLE

#backblaze config
#b2:
#  application-key-id: ${B2_APP_KEY_ID}
#  application-key: ${B2_APP_KEY_NAME}
#  bucket-name: ${B2_BUCKET_I}
#  url-expiration: 3600 # URL expiration in seconds

server:
  port: 9090
